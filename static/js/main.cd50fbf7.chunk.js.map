{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onChange","toggleMode","role","onClick","toggleModeChangeSwitch2","style","backgroundColor","marginRight","toggleModeChange","toggleModeChangeSwitch3","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","size","setSize","Fragment","color","heading","value","event","target","rows","marginTop","fontSize","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","e","length","App","setMode","body","setAlert","message","msg","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.cd50fbf7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/*<a className=\"nav-link\" href=\"/about\">About</a>*/}\r\n        </li>\r\n        </ul>\r\n      {/*\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      <form>\r\n      */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault  switch2\" onClick={props.toggleModeChangeSwitch2} style={{backgroundColor:'#405d27', marginRight: '5vw'}} />\r\n          <input className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleMode} role=\"switch\" onClick={props.toggleModeChange} id=\"flexSwitchCheckDefault switch1\" style={{backgroundColor:'#c1946a', marginRight: '5vw'}} />\r\n          <input className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault  switch3\" onClick={props.toggleModeChangeSwitch3} style={{backgroundColor:'black'}} />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Insert Title Here'\r\n}\r\n//\r\n//","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleOnChange=(event)=>{\r\n        //sconsole.log(\"handle on change\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleFontSize=(e)=>{\r\n      setSize(e.target.value)\r\n      props.showAlert(\"Font size is been incremented.\",\"success\")\r\n    }\r\n    const handleUpClick=()=>{\r\n        //console.log(\"up click\"+text)\r\n        let newText = text.toUpperCase();;\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const handleLoClick=()=>{\r\n        //console.log(\"up click\"+text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text has been clear\",\"success\")\r\n    }\r\n    const handleCopy=()=>{\r\n      var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Text has been Copied!\",\"success\")\r\n    }\r\n    const handleClearExtraSpace=()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra Space are been Removed!\",\"success\")\r\n    }\r\n   \r\n    // with the help of the useState, react update it \r\n    const [text, setText] = useState(\"\");\r\n    const [size, setSize] = useState(15);\r\n\r\n    // text=\"change it\" WRONG way of changing tshe state\r\n    // setText(\"change it \") CORRECT way of changing the state\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text}  onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\" style={{marginTop:\"40px\", fontSize:`${size}px`,backgroundColor:props.mode==='dark'?props.toggleModeChange:'white', color:props.mode==='dark'?'white':'black'}}></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.mode==='dark'?'dark':'primary'} mx-2`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'dark':'primary'} mx-2`} id='bttn' onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'dark':'primary'} mx-2`} id='bttn' onClick={handleCopy}>Copy Text</button>\r\n        <button className={`btn btn-${props.mode==='dark'?'dark':'primary'} mx-2`} id='bttn' onClick={handleClearExtraSpace}>Remove Extra Spaces</button> \r\n        <button className={`btn btn-${props.mode==='dark'?'dark':'primary'} mx-2`} id='bttn' onClick={handleClearClick}>Clear Text</button>\r\n        <div className=\"fontSize my-3\">\r\n          <b><span>Adjust Your font Size</span></b>\r\n          <input type=\"number\" value={size} style={{backgroundColor:props.mode==='dark'?'#0b0c0d':'white', color:props.mode==='dark'?'white':'black'}} onChange={handleFontSize} />\r\n        </div>\r\n        \r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary is here</h2>\r\n        <p>{text.split(\" \").length-1} <b>words</b> and {text.length} <b>characters</b></p>\r\n        <p>{0.008 * (text.split(\" \").length-1)} <b>Minutes</b> time to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textBox to Preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar'  \nimport Alert from './Components/Alert'\nimport TextForm from './Components/TextForm'  \n//import About from './Components/About' \nimport { useState } from 'react';\nimport {BrowserRouter as Router, RouterProvider, Routes} from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n \n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      //document.body.style.backgroundColor='#0a0b24';\n      showAlert(\" Dark Mode has been enabled\",\"success\")\n     /* document.title = \"TextUtils -Dark Mode\"\n      setInterval(() => {\n        document.title = \"TextUtils is Amazing\"\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtils Now\"\n      }, 1500);*/\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white'\n      showAlert(\" Light Mode has been enabled\",\"success\")\n    }\n  }\n  const toggleModeChange=()=>{\n    document.body.style.backgroundColor='rgb(60, 34, 10)';\n    document.getElementById('exampleFormControlTextarea1').style.backgroundColor='rgb(85, 61, 38)'\n  }\n  const toggleModeChangeSwitch2=()=>{\n    document.body.style.backgroundColor='rgb(43, 60, 28)';\n    document.getElementById('exampleFormControlTextarea1').style.backgroundColor='rgb(87, 111, 66)'\n  }\n  const toggleModeChangeSwitch3=()=>{\n    document.body.style.backgroundColor='black';\n    document.getElementById('exampleFormControlTextarea1').style.backgroundColor='#0f1011'\n  }\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" mode={mode} toggleModeChange={toggleModeChange} toggleMode={toggleMode} toggleModeChangeSwitch2={toggleModeChangeSwitch2} toggleModeChangeSwitch3={toggleModeChangeSwitch3} />\n    <div className=\"container my-3\">\n      <TextForm showAlert={showAlert} toggleModeChange={toggleModeChange} heading=\"Enter text to analyze below\" mode={mode}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n{/*<Router>\n<Navbar title=\"TextUtils\" mode={mode} toggleModeChange={toggleModeChange} toggleMode={toggleMode} toggleModeChangeSwitch2={toggleModeChangeSwitch2} toggleModeChangeSwitch3={toggleModeChangeSwitch3} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n<Routes>\n          <Route exact path=\"/about\" element={<About />} />\n          <Route exact path=\"/\" element={ \n          <TextForm showAlert={showAlert} toggleModeChange={toggleModeChange} heading=\"Enter text to analyze below\" mode={mode}/>} />\n      </Routes>\n      <TextForm showAlert={showAlert} toggleModeChange={toggleModeChange} heading=\"Enter text to analyze below\" mode={mode}/>\n</div>\n<div className=\"container my-3\">\n  <About/>\n</div>\n</Router>*/}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}